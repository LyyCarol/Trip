----------------------------------------------------------------
--comment auto generated by zeus
--名称 ：edw_ins_ind_mkt_insemail_send_status_fltprimaryorder_supbook
--功能描述 ：保险独立售卖-EDM-发送、打开、点击状态
--输入表 ： 
--输出表 ： 
--创建人：lyy林弋渝
--创建时间：2023-9-14
--运行类型 ： 
--注意事项 ：
--说明 ：EDM转化流程【用户上传→邮件发送&触达→邮件点击→独立售卖跳链点击&下单填写页曝光→创单→成单】
--修改历史 ：修改人    / 修改时间  / 主要改动说明
--      1. lyy林弋渝 / 2023-9-14 / 创建流程
--      2. lyy林弋渝 / 2023-9-18 / 发现存在Left join导致笛卡尔积的情况，已部分修复
--      3. lyy林弋渝 / 2023-11-18 / 发现存在【某uid在同一天在多产线下订单（且这些订单均符合发送客群的标准），EDM只发出去一封，当该uid购买了1份独立售卖保险，
--								   在该表中会被记成>=2。即不同产线订单对应的该uid都购保了，因此会在报表中重复记录】的情况。此处修复【邮件用户选取】代码块的逻辑，
--								   对于同一个发送日期&同一个uid，不论prdtype，取starttime最早的一个订单，视为该uid在该发送日期的所属客群，避免重复记录。
--      4. lyy林弋渝 / 2023-11-27 / 11.24 AXA-HK独立售卖产品上线后，发现下单填写页曝光埋点丢失，导致EDM中【邮件点击】指标偏低。更新逻辑：下单填写页曝光埋点+下单填写页pageview，进行uid和tsdate的去重（均限制bcp=2-4-2），以恢复数据
--      5. lyy林弋渝 / 2023-12-5 / 在【邮件发送&打开】除添加configid的限制（避免EDM与站内信的任务混淆）
--      6. lyy林弋渝 / 2023-12-5 / 发现对于F/X产线，存在一个uid传了>=2个邮箱，导致统计时该uid的保险订单被重复统计的情况。当前在【邮箱用户选取】中将rank的逻辑从dense_rank调整至row_number
--                               （先前逻辑中，同一个uid，不同邮箱，但对应订单的starttime是相同的，所以dense_rank会返回相同的值；调整至row_number后，避免该问题）
----------------------------------------------------------------
use dw_finance_ibuins_db;
insert overwrite table dw_finance_ibuins_db.edw_ins_ind_mkt_insemail_send_status_fltprimaryorder_supbook
partition (d,region,prdtype)

select distinct
	a.uid
	,NULL as orderid
	,a.email
	,a.locale
	,a.starttime
	,NULL as endtime
	,a.dcityname
	,a.acityname
	,NULL as orderidlist
	,a.taskId
	,a.taskname
	,a.group_type
	,a.flightway
	,a.currency
	,b.requestid
	,b.sendtime						  -- 邮件发送时间
	,b.send_statuscode
	,b.firstopentime				  -- 邮件首次打开时间
	,b.lastopentime					  -- 邮件最后一次打开时间
	,b.open_statuscode
	,b.firstclicktime				  -- 邮件首次点击时间（点击邮件任意位置，但是这个数不太准）
	,b.lastclicktime				  -- 邮件最后一次点击时间（点击邮件任意位置，但是这个数不太准）
	,b.click_statuscode
	,c.ts as orderpage_clicktime      -- 下单填写页曝光时间（使用下单填写页曝光埋点数据，后续若跳链换位置则需更新）
  	,d.ordertime as createordertime   -- 创单时间（针对所有创单）
  	,e.ordertime                      -- 创单时间（针对所有已完成&未退保订单）
	,e.policyno_cnt
	,e.premium_usd
	,e.commission_usd
	,a.d                              -- 发送日期
	,a.region                         -- 站点
	,a.prdtype                        -- 产线
from
(	 --- 邮件用户选取
  select distinct uid,email,locale,starttime,dcityname,acityname,taskId,taskname,group_type,flightway,currency,d,region,prdtype
  from
  (
    select distinct uid,email,locale,starttime,dcityname,acityname,taskId,taskname,group_type,flightway,currency,d,region,prdtype
      ,row_number()over(partition by d,uid order by starttime) as rank
    from dw_finance_ibuins_db.mid_ins_ind_mkt_primaryorder_supbook
    where d >= '2023-09-12' and d <= '${zdt.addDay(-1).format("yyyy-MM-dd")}'
    and uid is not null
  ) a
  where rank = 1
) a
left outer join
(	--- 邮件发送&打开
  select *
  from
  (
    select uid,requestid,sendtime,send_statuscode,firstopentime,lastopentime,open_statuscode,firstclicktime,lastclicktime,click_statuscode,locale
           ,row_number()over(partition by uid,substr(sendtime,1,10) order by sendtime desc) as rank
    from dw_finance_ibuins_db.mid_ins_ind_mkt_insemail_send_open
    where d = '${zdt.addDay(-1).format("yyyy-MM-dd")}' and send_statuscode = '20000'
    and configid in (60887,73432,73430)
  ) a
  where rank = 1
) b
on a.d = substr(b.sendtime,1,10) and a.locale = b.locale and lower(trim(a.uid)) = lower(trim(b.uid)) -- 待确认：如果t+1天补t天的数据该怎么算

left outer join
(	--- 邮件点击，用跳转下单填写页后的曝光埋点&下单填写页pageview代替邮件按钮点击记录（bcp=2-4-2）
  select uid, tsdate, max(ts) as ts
  from
  (
    select distinct uid,substr(ts,1,10) as tsdate,ts
    from dw_finance_ibuins_db.edw_ubt_custom_day_ibuins_ind_orderpage_exposure
    where d >= '2023-09-12' and d <= '${zdt.addDay(-1).format("yyyy-MM-dd")}'
    and bcp = '2-4-2'
    union all
    select distinct uid,tsdate,ts
    from dw_finance_ibuins_db.edw_ubt_pageview_day_ibuins_indpage
    where d >= '2023-09-12' and d <= '${zdt.addDay(-1).format("yyyy-MM-dd")}'
    and page = '10650087559' and bcp = '2-4-2'
  ) c1
  group by 1,2
) c
on lower(trim(b.uid)) = lower(trim(c.uid)) and substr(c.ts,1,10) between substr(b.sendtime,1,10) and date_add(substr(b.sendtime,1,10),14) -- 对于taskid:60862，规定同一uid在14天内不会受到该taskid的邮件
left outer join
(
  select uid, substr(ordertime,1,10) as orderdate, order_id, min(ordertime) as ordertime
  from dw_finance_ibuins_db.edw_fact_indorder_snap
  where d = '${zdt.addDay(0).format("yyyy-MM-dd")}'
  and uid not in ('_TIHKm1jaqq59xrv','_TIXXqopuuuz0k0e','_TXUSb8ef5f55vkm','_TIXXob252feld88','_TIHKriztutxsi8a','_TIHKt4fixutowlp','_TXGBfz994q97mtr','_TIHKs4p0kjl3ojs','_TIHKk8w877xunoq','_TSXXdyi2abgizhl','_TXXXfle96rp8ku4') -- 排除保险团队内部测试uid
  and bcp = '2-4-2'
  group by 1,2,3
) d
on lower(trim(c.uid)) = lower(trim(d.uid)) and substr(c.ts,1,10) = substr(d.ordertime,1,10)
left outer join
(
  select
    a.ordertime
    ,a.uid
    ,a.orderid
    -- ,count(distinct a.orderid) as ins_ord_cnt
	  ,count(distinct a.policyno) as policyno_cnt
	  ,sum(a.premium * c.exchangerate) as premium_usd
	  ,sum(a.commission * c.exchangerate) + sum(a.servicefee * c.exchangerate) as commission_usd
  from
  (
    select distinct orderid, policyno, currency, transtime, pay_premium as premium, commission, servicefee, ordertime, region,   locale, uid
    from dw_finance_ibuins_db.edw_ins_ind_transdata_record
    where d = '${zdt.addDay(0).format("yyyy-MM-dd")}' and is_refund = 0
    and bcp = '2-4-2'
  ) a
  left outer join
    dw_finance_ibuins_db.dim_ibuins_currency_usd_rate c
  on a.currency = c.currency and substr(a.transtime,1,10) = c.date
  group by 1,2,3
) e
on d.order_id = e.orderid
