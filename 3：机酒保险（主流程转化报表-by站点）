----------------------------------------------------------------
--comment auto generated by zeus
--名称 ：adm_ins_report_cover_show_tying_rate_flthtl_byregion
--功能描述 ：
--输入表 ： 
--输出表 ： 
--创建人：lyy林弋渝
--创建时间：2023-6-29
--运行类型 ： 
--注意事项 ：
--说明 ：
--修改历史 ：修改人    / 修改时间  / 主要改动说明
--      1. lyy林弋渝 / 2023-6-29 / 机酒主流程于23.6.29上线HK站点-app端
--      2. lyy林弋渝 / 2023-7-14 / 机酒主流程于23.7.14上线JP/KR站点-app端
--      3. lyy林弋渝 / 2023-7-15 / 发现机酒报表中展示率异常（出现展示率>100%情况），当前更新代码中insshow_order_cnt的逻辑，增加了日期限制
--      4. lyy林弋渝 / 2023-8-3 / 机酒主流程于23.8.3上线SG站点-app端
--      5. lyy林弋渝 / 2023-8-4 / 机酒主流程于23.8.4上线TH站点-app端(th-th)
--      6. lyy林弋渝 / 2023-12-5 / 新增展示埋点
----------------------------------------------------------------

use dw_finance_ibuins_db;
insert overwrite table dw_finance_ibuins_db.adm_ins_report_cover_show_tying_rate_flthtl_byregion 
partition (d = '${zdt.addDay(0).format("yyyy-MM-dd")}')

select 
	to_date(a.primorderorderdate) as order_date
	,'机酒' as prdtype
	,a.region
	,count(distinct a.primaryorderid_fill) as region_order_cnt
	,count(distinct case when (b.uid is not null or e.primaryorderid is not null) then a.primaryorderid_fill else null end) as insshow_order_cnt
	,count(distinct c.primaryorderid_fill) as ins_order_cnt
	,sum(case when c.primaryorderid_fill is not null then c.premium else 0 end) as ins_premium
	,sum(case when c.primaryorderid_fill is not null then c.commission else 0 end) as ins_commission
	,sum(case when c.primaryorderid_fill is not null then c.servicefee else 0 end) as ins_servicefee
	,sum(case when c.primaryorderid_fill is not null then c.premium_usd else 0 end) as ins_premium_usd
	,sum(case when c.primaryorderid_fill is not null then c.commission_usd else 0 end) as ins_commission_usd
	,sum(case when c.primaryorderid_fill is not null then c.servicefee_usd else 0 end) as ins_servicefee_usd
	,sum(case when c.primaryorderid_fill is not null then c.policyno_cnt else 0 end) as policyno_cnt
from
(
	select uid,primaryorderid_fill,primorderorderdate,region,serverfromname as channeltype
	from dw_finance_ibuins_db.edw_payment_fact_ibu_flthtlorder_snap
	where orderstatus <> 'C'
	and ((substr(primorderorderdate,1,10) >= '2023-06-29' and region in ('hk'))
          or (substr(primorderorderdate,1,10) >= '2023-07-14' and region in ('kr','jp'))
          or (substr(primorderorderdate,1,10) >= '2023-08-03' and region in ('sg'))
          or (substr(primorderorderdate,1,10) >= '2023-08-04' and region in ('th')))
	group by uid,primaryorderid_fill,primorderorderdate,region,serverfromname
) a
left outer join
(
  (select 
	  b.d,
	  if(c.new_uid is not null,c.new_uid,b.uid) as uid,
	  b.region,
	  b.channeltype
	from
	  (select d,uid,region,channeltype
	  from
	    (
	    	select d,coalesce(login_uid,uid) as uid,region,split(key,'_')[2] as channeltype
	    	from dw_finance_ibuins_db.edw_ins_user_custom_flt_insurance_load 
	    	where d >= '2023-06-29' and d <= '${zdt.addDay(-1).format("yyyy-MM-dd")}' 
	    	and key in ('ibu_flt_app_insurance_load') and typeid is not null 
	    	and region in ('hk','kr','jp','sg','th')
	    	group by d,coalesce(login_uid,uid),region,split(key,'_')[2]
	    	union all
	    	select d,coalesce(login_uid,uid) as uid,region,split(key,'_')[2] as channeltype
	    	from dw_finance_ibuins_db.edw_ins_user_custom_flt_insurance_show
	    	where d >= '2023-06-29' and d <= '${zdt.addDay(-1).format("yyyy-MM-dd")}' 
	    	and key in ('ibu_flt_app_travelinsurance_show') and insurancetype is not null 
	    	and region in ('hk','kr','jp','sg','th')
	    	group by d,coalesce(login_uid,uid),region,split(key,'_')[2]
          	union all
	    	select d,coalesce(login_uid,uid) as uid,region,split(key,'_')[2] as channeltype
	    	from dw_finance_ibuins_db.edw_ins_user_custom_flt_insurance_select_exit
	    	where d >= '2023-06-29' and d <= '${zdt.addDay(-1).format("yyyy-MM-dd")}' 
	    	and key in ('ibu_flt_app_travelinsurance_select_exit') and insurancetype is not null 
	    	and region in ('hk','kr','jp','sg','th')
	    	group by d,coalesce(login_uid,uid),region,split(key,'_')[2]
	    	union all
	    	select d,uid,region,channeltype
	    	from dw_finance_ibuins_db.edw_ubt_custom_day_ibuins_flt_xpricedetail_insurance
	    	where d >= '2023-06-29' and d <='${zdt.addDay(-1).format("yyyy-MM-dd")}'
	    	and lower(productname) = 'insurance'
	    	and region in ('hk','jp','kr','sg','th')
	    	group by d,uid,region,channeltype
	    ) a
	  group by d,uid,region,channeltype
	  ) b
	left outer join
	(
    select old_uid, new_uid, max(enable_time) as enable_time
    from ods_mobdb.trip_new_uid_mapping
    where d = '${zdt.addDay(0).format("yyyy-MM-dd")}'
      and finished = 1
      and enable_time is not null
    group by old_uid, new_uid
	) c
	on lower(trim(b.uid)) = lower(trim(c.old_uid))
	group by 1,2,3,4)

  union all

  (select 
	  b.d,
	  b.uid,
	  b.region,
	  b.channeltype
	from
	  (select d,uid,region,channeltype
	  from
	    (
	    	select d,coalesce(login_uid,uid) as uid,region,split(key,'_')[2] as channeltype
	    	from dw_finance_ibuins_db.edw_ins_user_custom_flt_insurance_load 
	    	where d >= '2023-06-29' and d <= '${zdt.addDay(-1).format("yyyy-MM-dd")}' 
	    	and key in ('ibu_flt_app_insurance_load') and typeid is not null 
	    	and region in ('hk','kr','jp','sg','th')
	    	group by d,coalesce(login_uid,uid),region,split(key,'_')[2]
	    	union all
	    	select d,coalesce(login_uid,uid) as uid,region,split(key,'_')[2] as channeltype
	    	from dw_finance_ibuins_db.edw_ins_user_custom_flt_insurance_show
	    	where d >= '2023-06-29' and d <= '${zdt.addDay(-1).format("yyyy-MM-dd")}' 
	    	and key in ('ibu_flt_app_travelinsurance_show') and insurancetype is not null 
	    	and region in ('hk','kr','jp','sg','th')
	    	group by d,coalesce(login_uid,uid),region,split(key,'_')[2]
          	union all
	    	select d,coalesce(login_uid,uid) as uid,region,split(key,'_')[2] as channeltype
	    	from dw_finance_ibuins_db.edw_ins_user_custom_flt_insurance_select_exit
	    	where d >= '2023-06-29' and d <= '${zdt.addDay(-1).format("yyyy-MM-dd")}' 
	    	and key in ('ibu_flt_app_travelinsurance_select_exit') and insurancetype is not null 
	    	and region in ('hk','kr','jp','sg','th')
	    	group by d,coalesce(login_uid,uid),region,split(key,'_')[2]
	    	union all
	    	select d,uid,region,channeltype
	    	from dw_finance_ibuins_db.edw_ubt_custom_day_ibuins_flt_xpricedetail_insurance
	    	where d >= '2023-06-29' and d <='${zdt.addDay(-1).format("yyyy-MM-dd")}'
	    	and lower(productname) = 'insurance'
	    	and region in ('hk','jp','kr','sg','th')
	    	group by d,uid,region,channeltype
	    ) a
	  group by d,uid,region,channeltype
	  ) b
	left outer join
	(
    select old_uid, new_uid, max(enable_time) as enable_time
    from ods_mobdb.trip_new_uid_mapping
    where d = '${zdt.addDay(0).format("yyyy-MM-dd")}'
      and finished = 1
      and enable_time is not null
    group by old_uid, new_uid
	) c
	on lower(trim(b.uid)) = lower(trim(c.old_uid))
	where c.enable_time is not null
	group by 1,2,3,4)
) b
on lower(trim(a.uid)) = lower(trim(b.uid)) and a.region = b.region and lower(trim(a.channeltype)) = lower(trim(b.channeltype)) and substr(a.primorderorderdate,1,10) between date_add(to_date(b.d),-1) and b.d
left outer join
(
  select primaryorderid, orderdate, lower(channeltype) as channeltype, region
  from dw_fltdb.dim_deal_ibu_ancillary_show_click_log
  where productname = 'insurance' and hasshow = 1
  and d >= '2022-01-01' and d <='${zdt.addDay(-1).format("yyyy-MM-dd")}'
  and region in ('de','es','fr','gb','kr','sg','th','hk','jp','xx','us','au','nz','it','nl','at','be','pl','pt','my','il','ca','ph','ie','ae','id','sa','ch')
  group by 1,2,3,4
) e
on a.primaryorderid_fill = e.primaryorderid and a.region = e.region and a.channeltype = e.channeltype

left outer join
(
	select 
		a.primaryorderid_fill
		,count(distinct a.policyno) as policyno_cnt
		,sum(a.premium) as premium
		,sum(a.commission) as commission
		,sum(a.servicefee) as servicefee
		,sum(a.premium * c.exchangerate) as premium_usd
		,sum(a.commission * c.exchangerate) as commission_usd
		,sum(a.servicefee * c.exchangerate) as servicefee_usd
	from
	(
		select orderid,primaryorderid_fill,policyno,currency,transtime,premium,commission,servicefee
		from dw_finance_ibuins_db.edw_ins_transdata_record
		where d = '${zdt.addDay(0).format("yyyy-MM-dd")}' and is_refund = 0 and booktypename = '主流程'
	) a
	left outer join
		dw_finance_ibuins_db.dim_ibuins_currency_usd_rate c
	on a.currency = c.currency and substr(a.transtime,1,10) = c.date
	group by a.primaryorderid_fill
) c
on a.primaryorderid_fill = c.primaryorderid_fill
where to_date(a.primorderorderdate) < current_date() 
group by to_date(a.primorderorderdate),a.region
;
